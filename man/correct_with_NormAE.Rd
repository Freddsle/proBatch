% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correct_batch_NormAE.R
\name{correct_with_NormAE}
\alias{correct_with_NormAE}
\title{Batch correction via NormAE (using Python via reticulate)}
\usage{
correct_with_NormAE(
  x,
  sample_annotation,
  sample_id_col = "FullRunName",
  batch_col = "MS_batch",
  feature_id_col = "peptide_group_label",
  measure_col = "Intensity",
  format = c("wide", "long"),
  inj_order_col = NULL,
  qc_col = NULL,
  keep_all = "default",
  python_env = NULL,
  conda_env = NULL,
  normae_args = list()
)
}
\arguments{
\item{x}{Data in long (\code{data.frame}) or wide (\code{matrix}) form, controlled by \code{format}.}

\item{sample_annotation}{data frame with:
\enumerate{ \item \code{sample_id_col} (this can be repeated as row names)
  \item biological covariates
  \item technical covariates (batches etc) }.
  See \code{help("example_sample_annotation")}}

\item{sample_id_col}{name of the column in \code{sample_annotation} table,
where the filenames (colnames of the \code{data_matrix} are found).}

\item{batch_col}{column in \code{sample_annotation} that should be used for
batch comparison (or other, non-batch factor to be mapped to color in plots).}

\item{feature_id_col}{name of the column with feature/gene/peptide/protein
ID used in the long format representation \code{df_long}. In the wide
formatted representation \code{data_matrix} this corresponds to the row
names.}

\item{measure_col}{if \code{df_long} is among the parameters, it is the
column with expression/abundance/intensity; otherwise, it is used
internally for consistency.}

\item{format}{One of \code{"wide"} or \code{"long"}.}

\item{inj_order_col}{Column in \code{sample_annotation} with injection order (integer).
If \code{NULL}, the order of \code{sample_annotation[[sample_id_col]]} is used.}

\item{qc_col}{Optional column in \code{sample_annotation} marking QC samples
(logical or factor; if factor, level "QC" is treated as QC, and "Subject" as non-QC).}

\item{keep_all}{For long format, columns to retain (see \code{subset_keep_cols()}).}

\item{python_env}{Optional path/name of Python/Conda env to use with \pkg{reticulate}.}

\item{normae_args}{Named list of keyword args forwarded to \code{normae$NormAE(...)}.
 Examples: \code{epochs}, \code{hidden_dims}, \code{lr}, \code{lambda_class},
 \code{lambda_rank}, \code{batch_size}, \code{device}. See NormAE for details.
Default: empty list (all defaults).}
}
\value{
Same type as input: numeric \code{matrix} for \code{format="wide"},
  or a long \code{data.frame} for \code{format="long"}.
}
\description{
Wrapper around the Python package \code{normae} (Normalization Autoencoder)
to remove batch effects using a deep autoencoder with adversarial regularization.
Works on wide matrices and long data.frames by converting to/from matrices.
}
\details{
Requires Python (>=3.10) with package \pkg{normae} installed.
  Install via \code{reticulate::py_install("git+https://github.com/luyiyun/NormAE.git", pip=TRUE)}.
  Upstream usage:\cr
  \code{from normae import NormAE; norm = NormAE(...); norm.fit(X, y, z, X_qc, y_qc, z_qc); X2 = norm.transform(X)}.
}
\references{
Rong, Zhiwei, et al. "NormAE: deep adversarial learning model to remove batch effects in
liquid chromatography mass spectrometry-based metabolomics data." Analytical chemistry 92.7 (2020): 5082-5090.
GitHub: https://github.com/luyiyun/NormAE/tree/release
}
