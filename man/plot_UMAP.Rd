% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteome_wide_diagnostics.R
\name{plot_UMAP}
\alias{plot_UMAP}
\alias{plot_UMAP.default}
\alias{plot_UMAP.ProBatchFeatures}
\title{Plot UMAP embedding of samples}
\usage{
\method{plot_UMAP}{default}(
  data_matrix,
  sample_annotation,
  feature_id_col = "peptide_group_label",
  sample_id_col = "FullRunName",
  color_by = "MS_batch",
  shape_by = NULL,
  n_neighbors = 15,
  min_dist = 0.1,
  metric = "euclidean",
  n_components = 2,
  fill_the_missing = -1,
  color_scheme = "brewer",
  plot_title = NULL,
  point_size = 8,
  point_alpha = 0.85,
  random_state = NULL,
  spread = NULL,
  learning_rate = NULL,
  ...
)

\method{plot_UMAP}{ProBatchFeatures}(
  x,
  pbf_name = NULL,
  sample_annotation = NULL,
  sample_id_col = "FullRunName",
  plot_title = NULL,
  return_gridExtra = FALSE,
  plot_ncol = NULL,
  return_subplots = FALSE,
  subplot_ncol = NULL,
  share_axes = TRUE,
  ...
)

plot_UMAP(x, ...)
}
\arguments{
\item{data_matrix}{features (in rows) vs samples (in columns) matrix, with
feature IDs in rownames and file/sample names as colnames.
See "example_proteome_matrix" for more details (to call the description,
use \code{help("example_proteome_matrix")})}

\item{sample_annotation}{data frame with:
\enumerate{ \item \code{sample_id_col} (this can be repeated as row names)
  \item biological covariates
  \item technical covariates (batches etc) }.
  See \code{help("example_sample_annotation")}}

\item{feature_id_col}{name of the column with feature/gene/peptide/protein
ID used in the long format representation \code{df_long}. In the wide
formatted representation \code{data_matrix} this corresponds to the row
names.}

\item{sample_id_col}{name of the column in \code{sample_annotation} table,
where the filenames (colnames of the \code{data_matrix} are found).}

\item{color_by}{column name (as in \code{sample_annotation}) to color by}

\item{n_neighbors}{size of the local neighbourhood used by UMAP.}

\item{min_dist}{minimum distance between embedded points.}

\item{metric}{distance metric used by UMAP.}

\item{n_components}{dimensionality of the embedding (first two components are
shown).}

\item{fill_the_missing}{numeric value determining how  missing values
should be substituted. If \code{NULL}, features with missing values are
excluded.
If \code{NULL}, features with missing values are excluded.}

\item{color_scheme}{a named vector of colors to map to \code{batch_col},
names corresponding to the levels of the factor. For continuous variables,
vector doesn't need to be named.}

\item{plot_title}{title of the plot (e.g., processing step + representation
level (fragments, transitions, proteins) + purpose (meanplot/corrplot etc))}

\item{random_state}{optional integer passed to `config$random_state` for
reproducibility.}

\item{spread}{optional numeric controlling how clustered points are in the
embedding (forwarded to the UMAP configuration when supplied).}

\item{learning_rate}{optional numeric learning rate for the UMAP optimiser
(forwarded to the configuration when supplied).}

\item{...}{additional arguments forwarded to `umap::umap()` (default method)
or the respective default method when called on `ProBatchFeatures`.}

\item{return_gridExtra}{logical; when `TRUE` and plotting multiple assays,
return a list containing the arranged grob along with the individual
ggplot objects.}

\item{plot_ncol}{optional integer controlling the number of columns used when
arranging multiple ggplots.}

\item{return_subplots}{logical; when `TRUE` and `use_plotlyrender = TRUE`,
combine multiple assays into a single subplot layout produced by
`plotly::subplot()`.}

\item{subplot_ncol}{optional integer specifying the number of subplot columns
when `return_subplots = TRUE`.}

\item{share_axes}{logical indicating whether subplot axes should be shared in
the Plotly output.}
}
\value{
A `ggplot` object displaying the UMAP embedding by default, or a
  `plotly` object when `use_plotlyrender = TRUE`.
}
\description{
Produce a UMAP visualization for a data matrix or `ProBatchFeatures`
object. A ggplot representation is returned by default, with optional
Plotly-based rendering when requested.
}
\examples{
\dontrun{
data(list = c("example_proteome_matrix", "example_sample_annotation"), package = "proBatch")
umap_plot <- plot_UMAP(example_proteome_matrix, example_sample_annotation,
    color_by = "MS_batch", n_neighbors = 10
)
}
}
