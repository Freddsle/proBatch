% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correct_batch_RUVIIIC.R
\name{correct_with_RUVIII_C}
\alias{correct_with_RUVIII_C}
\title{RUV-III-C batch normalization (requires RUVIIIC)}
\usage{
correct_with_RUVIII_C(
  x,
  sample_annotation,
  feature_id_col = "peptide_group_label",
  measure_col = "Intensity",
  sample_id_col = "FullRunName",
  replicate_col,
  negative_control_features,
  k,
  format = c("long", "wide"),
  keep_all = "default",
  version = c("CPP", "R"),
  to_correct = NULL,
  with_extra = FALSE,
  with_alpha = FALSE,
  with_w = FALSE,
  progress = TRUE,
  use_pseudorep = FALSE,
  prps_group_cols = NULL,
  rep_force = FALSE,
  ...
)
}
\arguments{
\item{x}{Data in long (\code{data.frame}) or wide (\code{matrix}) form, controlled by \code{format}.}

\item{sample_annotation}{data frame with:
\enumerate{ \item \code{sample_id_col} (this can be repeated as row names)
  \item biological covariates
  \item technical covariates (batches etc) }.
  See \code{help("example_sample_annotation")}}

\item{feature_id_col}{name of the column with feature/gene/peptide/protein
ID used in the long format representation \code{df_long}. In the wide
formatted representation \code{data_matrix} this corresponds to the row
names.}

\item{measure_col}{if \code{df_long} is among the parameters, it is the
column with expression/abundance/intensity; otherwise, it is used
internally for consistency.}

\item{sample_id_col}{name of the column in \code{sample_annotation} table,
where the filenames (colnames of the \code{data_matrix} are found).}

\item{replicate_col}{Column in `sample_annotation` that identifies technical
replicate groups (used to build the design matrix `M`). Must be present and
non-missing for all samples involved in the correction.}

\item{negative_control_features}{Character vector naming the negative-control
features (columns) used by RUV-III-C. All entries must be row names of the
input data matrix (i.e. feature identifiers).}

\item{k}{Integer; number of unwanted factors to remove. For each peptide normalized
it must satisfy rows(M) − cols(M) ≥ k on the subset used for that peptide.
If k is too high, some features will be dropped by necessity.}

\item{format}{One of `"long"` or `"wide"`.}

\item{keep_all}{Columns retained in the long-format output; passed to
[subset_keep_cols()]. Ignored for wide matrices.}

\item{version}{Either `"CPP"` (default; fast C++ implementation) or `"R"`
(prototype R implementation). Forwarded to [RUVIIIC::RUVIII_C()].}

\item{to_correct}{Optional character vector restricting the set of features to
correct. Defaults to all features present in the matrix.}

\item{with_extra, with_alpha, with_w, progress}{Optional flags forwarded to
[RUVIIIC::RUVIII_C()].}

\item{use_pseudorep}{Logical; if `TRUE` and **no** technical replicates are provided
(all replicate groups are size 1), construct **PRPS** pseudo-replicate pairs and
use them as `M`. If `FALSE` (default) and no technical replicates exist, stop with
an informative error (unless `rep_force = TRUE`).}

\item{prps_group_cols}{Optional character vector of column names in `sample_annotation`
defining *biological* groups within which to build pseudo-replicates (e.g. `"condition"`).
If `NULL`, the function will use `"condition"` when present; otherwise, if `rep_force = TRUE`,
it falls back to a single `"ALL"` group.}

\item{rep_force}{Logical; if `TRUE`, proceed even when no technical replicates are detected
and `use_pseudorep = FALSE` by automatically forming PRPS-like pairs. **Not recommended**.}

\item{...}{Additional arguments forwarded to [RUVIIIC::RUVIII_C()].}
}
\value{
For `format = "wide"`, a numeric matrix (features × samples) or, if
  `with_extra = TRUE`, a list matching the output of
  [RUVIIIC::RUVIII_C()] with `newY` transposed back to features × samples.
  For `format = "long"`, a long data.frame with corrected values in
  `measure_col` and original values preserved in `preBatchCorr_[measure_col]`.
  When `with_extra = TRUE`, a list is returned containing `newY` (features ×
  samples) plus an extra `corrected_long` element with the long-format output.
}
\description{
Adjusts batch effects using the [RUV-III-C](https://github.com/CMRI-ProCan/RUV-III-C)
algorithm, which extends RUV-III to handle missing values by correcting each
feature independently. Works on long data.frames (`format = "long"`) and wide
matrices (`format = "wide"`) by converting to/from matrices.

RUV-III-C normalizes each peptide/protein on the subset of
samples where that peptide and all controls are observed. Input - log2-transformed.
}
\references{
Poulos, R.C., Hains, P.G., Shah, R. et al. Strategies to enable
  large-scale proteomics for reproducible research. Nat Commun 11, 3793 (2020).
  https://doi.org/10.1038/s41467-020-17641-3
  GitHub: https://github.com/CMRI-ProCan/RUV-III-C
}
\seealso{
[correct_batch_effects()], [RUVIIIC::RUVIII_C()]
}
